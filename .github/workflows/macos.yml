name: macOS
on:
  push:
    branches: [main]
    paths-ignore:
      - "**.md"
      - "**.pdf"
  pull_request:
    branches: [main]
    paths-ignore:
      - "**.md"
      - "**.pdf"

jobs:
  build:
    env:
      buildDir: "${{ github.workspace }}/build/"
      vcpkg-tag: "2022.09.27"
      VCPKG_ROOT: "${{ github.workspace }}/vcpkg/"
      VCPKG_DEFAULT_BINARY_CACHE: "${{ github.workspace }}/vcpkg/.cache"
      MACOSX_DEPLOYMENT_TARGET: "10.15"
      CCACHE_DIR: "${{ github.workspace }}/ccache/"
      CCACHE_BASEDIR: "${{ github.workspace }}/ccache/"
      SCCACHE_DIR: "${{ github.workspace }}/ccache/"
      SCCACHE_BASEDIR: "${{ github.workspace }}/ccache/"

    name: build on macOS
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true

      # Install latest CMake.
      - uses: lukka/get-cmake@latest

      - name: Get current date
        run: |
          echo "DATE=$(date +'%Y-%m-%d')" >> $GITHUB_ENV

      - name: install non-vcpkg dependencies
        env:
          HOMEBREW_NO_ANALYTICS: "ON"
          HOMEBREW_NO_AUTO_UPDATE: "ON"
          HOMEBREW_NO_BOTTLE_SOURCE_FALLBACK: "ON"
          HOMEBREW_NO_INSTALL_CLEANUP: "ON"
        run: |
          brew install pkg-config automake ninja ccache

      - name: Set up ccache
        run: |
          ccache --set-config=cache_dir=${{ github.workspace }}/ccache
          ccache --set-config=max_size=500M
          ccache --set-config=compression=true

      - name: Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          version: 6.3.2
          cache: true

      - name: download vcpkg
        run: |
          git clone https://github.com/microsoft/vcpkg ${{ github.workspace }}/vcpkg || true
          pushd vcpkg
          git checkout --force ${{ env.vcpkg-tag }}
          ./bootstrap-vcpkg.sh
          popd

      - name: cache vcpkg
        id: cache-vcpkg
        uses: actions/cache@v3
        with:
          path: |
            ${{ github.workspace }}/vcpkg/.cache
            ${{ github.workspace }}/ccache
          key: ${{ runner.os }}-build-${{ env.vcpkg-tag }}-${{ env.DATE }}-${{ hashFiles('vcpkg.json') }}
          restore-keys: |
            ${{ runner.os }}-build-

      - name: Make cache dir
        if: steps.cache-vcpkg.outputs.cache-hit != 'true'
        run: mkdir -p "${{ github.workspace }}/vcpkg/.cache"

      - name: Configure & Build
        run: |
          ./scripts/dist_mac.sh

      - uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: vcpkg-logs
          path: ${{env.VCPKG_ROOT}}/buildtrees/**/*.log

      - uses: actions/upload-artifact@v2
        with:
          name: arclight-macOS-x64
          path: |
            bin/*.dmg
            LICENSE
            LICENSE.LGPL
            README.md
