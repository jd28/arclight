name: linux
on:
  push:
    branches: [main]
    paths-ignore:
      - "**.md"
  pull_request:
    branches: [main]
    paths-ignore:
      - "**.md"

jobs:
  build:
    env:
      buildDir: "${{ github.workspace }}/build/"
      vcpkg-tag: "2022.03.10"
      VCPKG_ROOT: "${{ github.workspace }}/vcpkg/"
      VCPKG_DEFAULT_BINARY_CACHE: "${{ github.workspace }}/vcpkg/.cache"

    name: build on linux
    runs-on: ubuntu-18.04

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - name: Free disk space
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /opt/ghc

      - name: install non-vcpkg dependencies
        run: |
          sudo apt install software-properties-common
          sudo add-apt-repository ppa:ubuntu-toolchain-r/test
          sudo apt-get update
          sudo apt-get install -y gcc-11 g++-11 cpp-11 gperf build-essential libgl1-mesa-dev libxkbcommon-x11-0 \
            libpulse-dev libxcb-util1 libxcb-glx0 libxcb-icccm4 libxcb-image0 libxcb-keysyms1 \
            libxcb-randr0 libxcb-render-util0 libxcb-render0 libxcb-shape0 libxcb-shm0 \
            libxcb-sync1 libxcb-xfixes0 libxcb-xinerama0 libxcb1 \
            at curl unzip tar libxt-dev libxaw7-dev cifs-utils \
            zip libx11-dev libxkbcommon-x11-dev libxi-dev libgl1-mesa-dev libglu1-mesa-dev mesa-common-dev libxinerama-dev libxxf86vm-dev \
            libxcursor-dev yasm libnuma1 libnuma-dev python-six python3-six python-yaml \
            flex libbison-dev autoconf libudev-dev libncurses5-dev libtool libxrandr-dev \
            xutils-dev dh-autoreconf autoconf-archive libgles2-mesa-dev ruby-full \
            pkg-config meson libxext-dev libxfixes-dev libxrender-dev \
            libxcb1-dev libx11-xcb-dev libxcb-glx0-dev libxcb-util0-dev \
            libxkbcommon-dev libxcb-keysyms1-dev \
            libxcb-image0-dev libxcb-shm0-dev libxcb-icccm4-dev libxcb-sync0-dev \
            libxcb-xfixes0-dev libxcb-shape0-dev libxcb-randr0-dev \
            libxcb-render-util0-dev libxcb-xinerama0-dev libxcb-xkb-dev libxcb-xinput-dev libkrb5-dev \
            libxcb-res0-dev python3-setuptools python3-mako python3-pip

      - name: Use gcc-11
        run: |
          sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-11 110 \
                         --slave /usr/bin/gcov gcov /usr/bin/gcov-11 \
                         --slave /usr/bin/gcc-ar gcc-ar /usr/bin/gcc-ar-11 \
                         --slave /usr/bin/gcc-ranlib gcc-ranlib /usr/bin/gcc-ranlib-11 && \
          sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-11 110
          sudo update-alternatives --install /usr/bin/cpp cpp /usr/bin/cpp-11 110
          gcc --version
          g++ --version
          gcov --version

      # Install latest CMake.
      - uses: lukka/get-cmake@latest

      - name: Cache Qt
        id: cache-qt
        uses: actions/cache@v1 # not v2!
        with:
          path: ../Qt
          key: ${{ runner.os }}-QtCache

      - name: Install Qt
        uses: jurplel/install-qt-action@v2
        with:
          cached: ${{ steps.cache-qt.outputs.cache-hit }}

      - name: download vcpkg
        run: |
          git clone https://github.com/microsoft/vcpkg ${{ github.workspace }}/vcpkg || true
          pushd vcpkg
          git checkout --force ${{ env.vcpkg-tag }}
          ./bootstrap-vcpkg.sh
          popd

      - name: cache vcpkg
        id: cache-vcpkg
        uses: actions/cache@v2
        env:
          cache-name: cache-vcpgk3
        with:
          path: |
            ${{ github.workspace }}/vcpkg/.cache
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ env.vcpkg-tag }}-${{ hashFiles('vcpkg.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-${{ env.vcpkg-tag }}

      - name: Make cache dir
        if: steps.cache-vcpkg.outputs.cache-hit != 'true'
        run: mkdir -p "${{ github.workspace }}/vcpkg/.cache"

      - name: Get linuxdeployqt
        run:  wget -c -nv "https://github.com/probonopd/linuxdeployqt/releases/download/continuous/linuxdeployqt-continuous-x86_64.AppImage"
      - name: Make linuxdeployqt executable
        run: chmod a+x linuxdeployqt-continuous-x86_64.AppImage

      - name: Configure & Build
        run: |
          ./scripts/dist_linux.sh

      - uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: vcpkg-logs
          path: ${{env.VCPKG_ROOT}}/buildtrees/**/*.log

      - uses: actions/upload-artifact@v2
        with:
          name: arclight-linux-x64
          path: bin/*
