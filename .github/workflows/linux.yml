name: linux
on:
  push:
    branches: [main]
    paths-ignore:
      - "**.md"
      - "**.pdf"
  pull_request:
    branches: [main]
    paths-ignore:
      - "**.md"
      - "**.pdf"

jobs:
  build:
    env:
      buildDir: "${{ github.workspace }}/build/"
      CC: clang
      CXX: clang++

    name: build on linux
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Get current date
        run: |
          echo "DATE=$(date +'%Y-%m-%d')" >> $GITHUB_ENV

      - name: install dependencies
        run: |
          sudo apt install software-properties-common
          sudo add-apt-repository ppa:ubuntu-toolchain-r/test

          # Import LLVM repository key
          wget https://apt.llvm.org/llvm-snapshot.gpg.key
          sudo apt-key add llvm-snapshot.gpg.key

          # Add LLVM repository for latest Clang (Clang-19)
          sudo add-apt-repository "deb http://apt.llvm.org/jammy/ llvm-toolchain-jammy-19 main"

          sudo apt-get update
          sudo apt-get install -y ccache ninja-build cmake clang-19 \
            clang++-19 lldb-19 lld-19 clangd-19 clang-tidy-19 clang-format-19 \
            libc++-19-dev libc++abi-19-dev

          sudo update-alternatives --install /usr/bin/clang clang /usr/bin/clang-19 110
          sudo update-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-19 110

          clang --version
          clang++ --version
      - name: setup ccache
        run: |
          ccache --set-config=cache_dir=${{ github.workspace }}/.ccache
          ccache --set-config=max_size=5G
          ccache --set-config=compression=true

      - uses: lukka/get-cmake@latest

      - name: Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          version: 6.6.3
          modules: "qtmultimedia"
          cache: true

      - name: cache ccache
        uses: actions/cache@v4
        with:
          path: |
            ${{ github.workspace }}/.ccache
          key: ${{ runner.os }}-build-${{ env.DATE }}
          restore-keys: |
            ${{ runner.os }}-build-

      - name: Configure & Build
        run: |
          ./scripts/dist_linux.sh

      - uses: actions/upload-artifact@v4
        with:
          name: arclight-linux-x64
          path: bin/*

      - name: ccache stats
        run: |
         ccache -s
